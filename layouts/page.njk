{% import "menu.mac" as menu %}
<!DOCTYPE html>
<html>
{% block page %}
<head>
{% block head %}
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="{{ description }}">
<meta name="generator" content="metalsmith">

<title>{{siteTitle}} - {{title}}</title>
<style>
nav ul {list-style-type: none;}
</style>

{% endblock head %}
</head>
<body>
<nav aria-label="site">
{% block siteNavigation %}
{% call menu.menu (top="top level") %}
{% call menu.submenu(label="blog", hasLink="/blog/index.html") %}
{{menu.menuFromCollection(type="links", collection=collections.blog)}}
{% endcall %}

{{menu.link("/about.html", "About")}}

{% call menu.submenu(label="dummy", hasLink="https://www.mit.edu/") %}
{{menu.menuFromCollection (type="actions", collection=[
{name: "action1", label: "do something"},
{name: "action2", label: "do something else"}
])}}
{% endcall %}
{% endcall %}
{% endblock siteNavigation %}
</nav>
<main>
{% block branding %}
<h1>{{ title }} - {{siteTitle}}</h1>
<p>{{ description }}</p>
{% endblock branding %}
<hr>
{{contents | safe}}
{% block pageContent %}
{% endblock %}
</main>
<footer>
<p>--end--</p>
</footer>

<script>
document.querySelector("nav").addEventListener("click", e => {
const trigger = e.target;
if (trigger.matches("[aria-haspopup=true]")) toggleMenu(trigger);
else if (trigger.matches("[data-action]")) trigger.dispatchEvent(new CustomEvent("action", {detail: {name: trigger.dataset.action}, bubbles: true}));

});

document.querySelector("nav").addEventListener("action", e => reportAction(e.detail, e.target));

function toggleMenu (toggler) {
const menu = toggler.nextElementSibling;
toggler.setAttribute("aria-expanded", (menu.hidden = !menu.hidden)?
"false" : "true");
} // toggleMenu

function reportAction (detail, target) {
alert (`got ${detail.name} on ${target}`);
} // reportAction
</script>
</body>
{% endblock page %}
</html>
